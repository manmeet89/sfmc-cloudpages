{
  "swagger": "2.0",
  "info": {
    "description": "This is the currency API for getting the list of all currencies, currencies by coutry and exchange rates",
    "version": "1.0.0",
    "title": "Countries, Currencies and Exchange Rates API",
    "contact": {
      "email": "manmeet.singh@publicissapient.com"
    }
  },
  "host": "lloydsserver.com",
  "basePath": "/travelmoney/api/v1",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Countries",
      "description": "Set of APIs related to countries and its currencies"
    },
    {
      "name": "Exchange Rate",
      "description": "Set of APIs related to currency exchange rates"
    }
  ],
  "paths": {
    "/countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "summary": "Get the list of all Countries with the currencies supported",
        "operationId": "getCountries",
        "description": "Get the list of all counrties with currency codes\n",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The JWT token for API security",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "TRACKING_ID",
            "description": "This will be an optional tracking id that can be used to trace the request",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "List of all countries",
            "headers": {
              "TRACKING_ID": {
                "type": "string",
                "description": "This is the Tracking Id generated by the service or the same tracking Id passed in the header of the request. This will be used for tracking the request."
              }
            },
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Country"
              }
            }
          },
          "401": {
            "description": "Un-authorised",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "TRACKING_ID": {
                "type": "string",
                "description": "This is the Tracking Id generated by the service or the same tracking Id passed in the header of the request. This will be used for tracking the request."
              }
            }
          }
        }
      }
    },
    "/exchangerate": {
      "get": {
        "tags": [
          "Exchange Rate"
        ],
        "summary": "Get the exchange rate for a currency wrt a base currency",
        "operationId": "searchInventory",
        "description": "Get the exchange rate for a currency wrt a base currency",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "baseCurrencyCode",
            "description": "The base currency code from which we need exchange rates in all other currenies",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "toCurrencyCode",
            "description": "The currency for which we need exchange rate",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "The JWT token for API security",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "TRACKING_ID",
            "description": "This will be an optional tracking id that can be used to trace the request",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Exchange Rates",
            "schema": {
              "$ref": "#/definitions/CurrencyConversion"
            },
            "headers": {
              "TRACKING_ID": {
                "type": "string",
                "description": "This is the Tracking Id generated by the service or the same tracking Id passed in the header of the request. This will be used for tracking the request."
              }
            }
          },
          "401": {
            "description": "Un-authorised",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "TRACKING_ID": {
                "type": "string",
                "description": "This is the Tracking Id generated by the service or the same tracking Id passed in the header of the request. This will be used for tracking the request."
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Country": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string",
          "example": "AUS"
        },
        "countryName": {
          "type": "string",
          "example": "Australia"
        },
        "currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Currency"
          }
        }
      },
      "example": [
        {
          "countryCode": "USA",
          "countryName": "United States Of America",
          "currencies": [
            {
              "currencyCode": "USD",
              "currencyName": "US Dollars",
              "importRestriction": "Import is restricted to USD 1000 per traveller"
            }
          ]
        },
        {
          "countryCode": "AUS",
          "countryName": "Australia",
          "currencies": [
            {
              "currencyCode": "AUD",
              "currencyName": "Australian Dollars",
              "importRestriction": "Import is restricted to AUD 1000 per traveller"
            },
            {
              "currencyCode": "USD",
              "currencyName": "US Dollars",
              "importRestriction": "Import is restricted to USD 1000 per traveller"
            }
          ]
        }
      ]
    },
    "Currency": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "example": "AUD"
        },
        "currencyName": {
          "type": "string",
          "example": "Australian Dollars"
        },
        "importRestriction": {
          "type": "string",
          "example": "Import is restricted to USD 1000 per traveller"
        }
      }
    },
    "CurrencyConversion": {
      "type": "object",
      "properties": {
        "exchangeRate": {
          "type": "object",
          "description": "This is the object contating information specific to the exchange rate",
          "properties": {
            "baseCurrencyCode": {
              "type": "string",
              "description": "This is the currency from which the exchange rate is calculated."
            },
            "toCurrencyCode": {
              "type": "string",
              "description": "This is the currency code for which exchange rate is requested"
            },
            "rate": {
              "type": "string",
              "description": "This is the exchange rate for the currency"
            },
            "effectiveDate": {
              "type": "string",
              "description": "This is the date for which the rate is returned"
            }
          }
        },
        "orderLimit": {
          "type": "object",
          "properties": {
            "min": {
              "type": "number",
              "description": "The minimum order limit for the order"
            },
            "max": {
              "type": "number",
              "description": "The maximum order limit for the order"
            }
          }
        }
      },
      "example": {
        "currencyConversion": {
          "exchangeRate": {
            "baseCurrencyCode": "GBP",
            "toCurrencyCode": "AUD",
            "rate": 1.223,
            "effectiveDate": "2020-12-31"
          },
          "orderLimit": {
            "min": 0,
            "max": 2000
          }
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "description": "The timestamp string when the error occurred in the service"
        },
        "status": {
          "type": "number",
          "description": "the HTTP Status code"
        },
        "error": {
          "type": "string",
          "description": "The description of the error occured"
        },
        "message": {
          "type": "string",
          "description": "The message that is relevant to the developer"
        },
        "path": {
          "type": "string",
          "description": "The path of the API for which error occurred."
        }
      },
      "example": {
        "timestamp": "2019-01-17T16:12:45.977+0000",
        "status": 500,
        "error": "Internal Server Error",
        "message": "Error processing the request!",
        "path": "/my-endpoint-with-exceptions"
      }
    }
  }
}